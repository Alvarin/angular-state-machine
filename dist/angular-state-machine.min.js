/**
 * AngularJS service to implement a simple finite state machine.
 * @version v0.1.0 - 2014-01-22
 * @link https://github.com/tafax/angular-state-machine
 * @author Matteo Tafani Alunno <matteo.tafanialunno@gmail.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
"use strict";var FSM=angular.module("FSM",[]);FSM.provider("stateMachine",function(){function a(a,b){function c(a,b){var d={};for(var e in a)d[e]=a[e],e in b&&"object"==typeof a[e]&&null!==e&&(d[e]=c(a[e],b[e]));for(var f in b)f in d||(d[f]=b[f]);return d}this.getJson=function(){return b},this.extend=function(b){a=c(a,b)};var d={};this.getStates=function(){return d};var e=[];this.getMessages=function(){return e};var f={};this.getTransitions=function(){return f},this.configure=function(){if(!a.hasOwnProperty("init"))throw"You have to create 'init' state.";for(var b in a){var c=a[b];c.name=b;var g={};if(c.hasOwnProperty("transitions")){g=c.transitions;for(var h in g)e.indexOf(h)<0&&e.push(h);delete c.transitions}f.hasOwnProperty(b)||(f[b]={}),angular.extend(f[b],g),d.hasOwnProperty(b)||(d[b]={}),angular.extend(d[b],c)}}}function b(){}function c(){b.call(this),this.current=null}function d(a,b){c.call(this),this.http=a,this.q=b,this.promise=null}function e(a,b,c){this.initialize=function(){b.initialize(c)},this.getStates=function(){return b.getStates(c)},this.getMessages=function(){return b.getMessages(c)},this.hasMessage=function(a){return b.hasMessage(c,a)},this.isAvailable=function(a){return b.isAvailable(c,a)},this.available=function(){return b.available(c)},this.send=function(d){b.send(a,c,d)}}b.prototype.initialize=function(){},b.prototype.getStates=function(){},b.prototype.getMessages=function(){},b.prototype.hasMessage=function(){},b.prototype.isAvailable=function(){},b.prototype.available=function(){},b.prototype.send=function(){},b.prototype=new b,c.prototype.initialize=function(a){a.configure();var b=a.getStates();this.current=b.init},c.prototype.getStates=function(a){return Object.keys(a.getStates())},c.prototype.getMessages=function(a){return a.getMessages()},c.prototype.hasMessage=function(a,b){var c=a.getMessages();return c.indexOf(b)>=0},c.prototype.isAvailable=function(a,b){var c=a.getTransitions(),d=c[this.current.name];return d.hasOwnProperty(b)},c.prototype.available=function(a){var b=a.getTransitions(),c=b[this.current.name];return Object.keys(c)},c.prototype.send=function(a,b,c){if(b.getMessages().indexOf(c)>=0){var d=b.getTransitions();if(d.hasOwnProperty(this.current.name)){var e=d[this.current.name];if(e.hasOwnProperty(c)){var f=b.getStates(),g=f[e[c]];g.target=a.invoke(g.action,this,this.current),this.current=g}}}},d.prototype=new c,d.prototype.initialize=function(a){this.promise=this.http({method:"GET",url:"file://"+a.getJson()}).then(function(b){a.extend(b.data),c.prototype.initialize(a)},function(a){throw"Unable to load '"+json+"'. The server responds with status "+a.status+"."})},d.prototype.getStates=function(a){if(null!==this.promise){var b=this.q.defer();return this.promise.then(function(){b.resolve(c.prototype.getStates(a))}),b.promise}throw"You have to initialize the machine."},d.prototype.getMessages=function(a){if(null!==this.promise){var b=this.q.defer();return this.promise.then(function(){b.resolve(c.prototype.getMessages(a))}),b.promise}throw"You have to initialize the machine."},d.prototype.hasMessage=function(a,b){if(null!==this.promise){var d=this.q.defer();return this.promise.then(function(){d.resolve(c.prototype.hasMessage(a,b))}),d.promise}throw"You have to initialize the machine."},d.prototype.isAvailable=function(a,b){if(null!==this.promise){var d=this.q.defer();return this.promise.then(function(){d.resolve(c.prototype.isAvailable(a,b))}),d.promise}throw"You have to initialize the machine."},d.prototype.available=function(a){if(null!==this.promise){var b=this.q.defer();return this.promise.then(function(){b.resolve(c.prototype.available(a))}),b.promise}throw"You have to initialize the machine."},d.prototype.send=function(a,b,d){if(null!==this.promise){var e=this.q.defer();return this.promise.then(function(){e.resolve(c.prototype.send(a,b,d))}),e.promise}throw"You have to initialize the machine."};var f=null,g={},h=!1;this.config=function(a){g=a},this.load=function(a){f=a,h=!0},this.$get=["$injector","$http","$q",function(b,i,j){var k=h?new d(i,j):new c;return new e(b,k,new a(g,f))}]});